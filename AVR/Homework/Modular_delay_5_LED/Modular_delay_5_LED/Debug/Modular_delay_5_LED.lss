
Modular_delay_5_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000120  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000077d  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b1  00000000  00000000  000009a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000330  00000000  00000000  0000105a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  0000138c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000382  00000000  00000000  000013f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000087  00000000  00000000  00001772  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000017f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 73 00 	call	0xe6	; 0xe6 <main>
  78:	0c 94 8e 00 	jmp	0x11c	; 0x11c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <timer_0_init>:
#include <stdio.h>


void timer_0_init(void)
{
	DDRB|=(1<<DDB5);
  80:	84 b1       	in	r24, 0x04	; 4
  82:	80 62       	ori	r24, 0x20	; 32
  84:	84 b9       	out	0x04, r24	; 4
	DDRB|=(1<<DDB4);
  86:	84 b1       	in	r24, 0x04	; 4
  88:	80 61       	ori	r24, 0x10	; 16
  8a:	84 b9       	out	0x04, r24	; 4
	DDRB|=(1<<DDB3);
  8c:	84 b1       	in	r24, 0x04	; 4
  8e:	88 60       	ori	r24, 0x08	; 8
  90:	84 b9       	out	0x04, r24	; 4
	DDRB|=(1<<DDB2);
  92:	84 b1       	in	r24, 0x04	; 4
  94:	84 60       	ori	r24, 0x04	; 4
  96:	84 b9       	out	0x04, r24	; 4
	DDRB|=(1<<DDB1);
  98:	84 b1       	in	r24, 0x04	; 4
  9a:	82 60       	ori	r24, 0x02	; 2
  9c:	84 b9       	out	0x04, r24	; 4
	TCCR0B|=(1<<CS00);
  9e:	85 b5       	in	r24, 0x25	; 37
  a0:	81 60       	ori	r24, 0x01	; 1
  a2:	85 bd       	out	0x25, r24	; 37
	TCCR0B|=(1<<CS01);
  a4:	85 b5       	in	r24, 0x25	; 37
  a6:	82 60       	ori	r24, 0x02	; 2
  a8:	85 bd       	out	0x25, r24	; 37
	TCCR0A|=(1<<WGM01);
  aa:	84 b5       	in	r24, 0x24	; 36
  ac:	82 60       	ori	r24, 0x02	; 2
  ae:	84 bd       	out	0x24, r24	; 36
	TCNT0=0;
  b0:	16 bc       	out	0x26, r1	; 38
	TIFR0|=(1<<OCF0A);
  b2:	85 b3       	in	r24, 0x15	; 21
  b4:	82 60       	ori	r24, 0x02	; 2
  b6:	85 bb       	out	0x15, r24	; 21
	OCR0A=249;
  b8:	89 ef       	ldi	r24, 0xF9	; 249
  ba:	87 bd       	out	0x27, r24	; 39
  bc:	08 95       	ret

000000be <delay>:
	
}

void delay(uint16_t ms)
{
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	ec 01       	movw	r28, r24
	timer_0_init();
  c4:	0e 94 40 00 	call	0x80	; 0x80 <timer_0_init>
	
	while(ms--)
  c8:	06 c0       	rjmp	.+12     	; 0xd6 <delay+0x18>
	{
		while(!(TIFR0&(1<<OCF0A)))
  ca:	a9 9b       	sbis	0x15, 1	; 21
  cc:	fe cf       	rjmp	.-4      	; 0xca <delay+0xc>
		{
			
		}
		TIFR0|=(1<<OCF0A);
  ce:	85 b3       	in	r24, 0x15	; 21
  d0:	82 60       	ori	r24, 0x02	; 2
  d2:	85 bb       	out	0x15, r24	; 21

void delay(uint16_t ms)
{
	timer_0_init();
	
	while(ms--)
  d4:	e9 01       	movw	r28, r18
  d6:	9e 01       	movw	r18, r28
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	31 09       	sbc	r19, r1
  dc:	cd 2b       	or	r28, r29
  de:	a9 f7       	brne	.-22     	; 0xca <delay+0xc>
		}
		TIFR0|=(1<<OCF0A);
	}
	
	
  e0:	df 91       	pop	r29
  e2:	cf 91       	pop	r28
  e4:	08 95       	ret

000000e6 <main>:
#include "GPIO.h"


int main(void)
{
	timer_0_init();
  e6:	0e 94 40 00 	call	0x80	; 0x80 <timer_0_init>
    
    while (1) 
    {
		PORTB^=(1<<PORTB5);
  ea:	95 b1       	in	r25, 0x05	; 5
  ec:	80 e2       	ldi	r24, 0x20	; 32
  ee:	89 27       	eor	r24, r25
  f0:	85 b9       	out	0x05, r24	; 5
		PORTB^=(1<<PORTB4);
  f2:	95 b1       	in	r25, 0x05	; 5
  f4:	80 e1       	ldi	r24, 0x10	; 16
  f6:	89 27       	eor	r24, r25
  f8:	85 b9       	out	0x05, r24	; 5
		PORTB^=(1<<PORTB3);
  fa:	95 b1       	in	r25, 0x05	; 5
  fc:	88 e0       	ldi	r24, 0x08	; 8
  fe:	89 27       	eor	r24, r25
 100:	85 b9       	out	0x05, r24	; 5
		PORTB^=(1<<PORTB2);
 102:	95 b1       	in	r25, 0x05	; 5
 104:	84 e0       	ldi	r24, 0x04	; 4
 106:	89 27       	eor	r24, r25
 108:	85 b9       	out	0x05, r24	; 5
		PORTB^=(1<<PORTB1);
 10a:	95 b1       	in	r25, 0x05	; 5
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	89 27       	eor	r24, r25
 110:	85 b9       	out	0x05, r24	; 5
		delay(2000);
 112:	80 ed       	ldi	r24, 0xD0	; 208
 114:	97 e0       	ldi	r25, 0x07	; 7
 116:	0e 94 5f 00 	call	0xbe	; 0xbe <delay>
 11a:	e7 cf       	rjmp	.-50     	; 0xea <main+0x4>

0000011c <_exit>:
 11c:	f8 94       	cli

0000011e <__stop_program>:
 11e:	ff cf       	rjmp	.-2      	; 0x11e <__stop_program>
