
CTC_timer_delay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000122  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000ce  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000122  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000154  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000194  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000694  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000610  00000000  00000000  00000848  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000022e  00000000  00000000  00000e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001088  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000363  00000000  00000000  000010ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000024  00000000  00000000  0000140f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001433  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>


int main(void)
{
   DDRB|=(1<<DDB5);
  80:	84 b1       	in	r24, 0x04	; 4
  82:	80 62       	ori	r24, 0x20	; 32
  84:	84 b9       	out	0x04, r24	; 4
   TCCR0A|=(1<<WGM01);
  86:	84 b5       	in	r24, 0x24	; 36
  88:	82 60       	ori	r24, 0x02	; 2
  8a:	84 bd       	out	0x24, r24	; 36
   TCCR0B|=(1<<CS00);
  8c:	85 b5       	in	r24, 0x25	; 37
  8e:	81 60       	ori	r24, 0x01	; 1
  90:	85 bd       	out	0x25, r24	; 37
   TCCR0B|=(1<<CS01);
  92:	85 b5       	in	r24, 0x25	; 37
  94:	82 60       	ori	r24, 0x02	; 2
  96:	85 bd       	out	0x25, r24	; 37
   TCNT0=0;
  98:	16 bc       	out	0x26, r1	; 38
   OCR0A=220;
  9a:	8c ed       	ldi	r24, 0xDC	; 220
  9c:	87 bd       	out	0x27, r24	; 39
   TIFR0|=(1<<OCF0A);
  9e:	85 b3       	in	r24, 0x15	; 21
  a0:	82 60       	ori	r24, 0x02	; 2
  a2:	85 bb       	out	0x15, r24	; 21
    while (1) 
    {
		PORTB^=(1<<PORTB5);
  a4:	95 b1       	in	r25, 0x05	; 5
  a6:	80 e2       	ldi	r24, 0x20	; 32
  a8:	89 27       	eor	r24, r25
  aa:	85 b9       	out	0x05, r24	; 5
		for(int i=0;i<5682;i++)
  ac:	20 e0       	ldi	r18, 0x00	; 0
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	07 c0       	rjmp	.+14     	; 0xc0 <main+0x40>
		{
			while(!(TIFR0 & (1<<OCF0A)));
  b2:	a9 9b       	sbis	0x15, 1	; 21
  b4:	fe cf       	rjmp	.-4      	; 0xb2 <main+0x32>
			TIFR0|=(1<<OCF0A);
  b6:	85 b3       	in	r24, 0x15	; 21
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	85 bb       	out	0x15, r24	; 21
   OCR0A=220;
   TIFR0|=(1<<OCF0A);
    while (1) 
    {
		PORTB^=(1<<PORTB5);
		for(int i=0;i<5682;i++)
  bc:	2f 5f       	subi	r18, 0xFF	; 255
  be:	3f 4f       	sbci	r19, 0xFF	; 255
  c0:	22 33       	cpi	r18, 0x32	; 50
  c2:	86 e1       	ldi	r24, 0x16	; 22
  c4:	38 07       	cpc	r19, r24
  c6:	ac f3       	brlt	.-22     	; 0xb2 <main+0x32>
  c8:	ed cf       	rjmp	.-38     	; 0xa4 <main+0x24>

000000ca <_exit>:
  ca:	f8 94       	cli

000000cc <__stop_program>:
  cc:	ff cf       	rjmp	.-2      	; 0xcc <__stop_program>
